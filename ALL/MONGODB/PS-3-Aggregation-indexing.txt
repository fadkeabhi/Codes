Problem Statement 3 (Aggregation & Indexing)
Create the Collection Movies_Data( Movie_ID, Movie_Name, Director, Genre, BoxOfficeCollection) and
solve the following:

1. Display a list stating how many Movies are directed by each “Director”.

 db.Movies_Data.aggregate([ { $group : {_id : "$Director" , "No. of movies : " :{ $sum : 1 }}   } ])

2. Display list of Movies with the highest BoxOfficeCollection in each Genre.

 db.Movies_Data.aggregate([ { $group : {_id : "$Genre" , "Movies" :{ $max : "$Box_office" }}   } ])

3. Display list of Movies with the highest BoxOfficeCollection in each Genre in ascending orderof BoxOfficeCollection.

db.Movies_Data.aggregate([ { $group : {_id : "$Genre" , "Movies" :{ $max : "$Box_office" }}   } ,{ $sort : { Box_office : 1 }} ])

4. Create an index on field Movie_ID.

 db.Movies_Data.createIndex({ Movie_ID : 1 })

5. Create an index on fields ” Movie_Name” and ” Director”.

db.Movies_Data.createIndex({ Movie_ID : 1 } ,{ Director : 1 } )

6. Drop an index on field Movie_ID.

db.Movies_Data.dropIndex({ Movie_ID : 1 })

7. Drop an index on fields ” Movie_Name” and ” Director”.

db.Movies_Data.dropIndex({ Movie_ID : 1 } ,{ Director : 1 } )

